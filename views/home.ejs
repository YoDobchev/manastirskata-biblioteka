<!DOCTYPE html>
<html>

  <head>
    <title>Mobile Page</title>
    <link rel="stylesheet" type="text/css" href="/styles/home.css" />
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
      integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
      crossorigin=""
    />

    <script
      src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
      integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
      crossorigin=""
    ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-routing-machine/3.2.12/leaflet-routing-machine.min.js"></script>
  </head>

  <body>
    <div id="container">
      <div id="map" style="width: 100%; height: 600px"></div>

      <div id="progress">
        <div id="progress-filled"></div>
      </div>
      <div id="buttons">
        <div class="button"></div>
        <div class="button"></div>
        <div class="button"></div>
        <div class="button"></div>
      </div>
    </div>
    <script>
      var map = L.map('map', {
        zoomControls: false,
        attributionControl: false
      }).setView([51.505, -0.09], 13);


      var PurpleIcon = L.Icon.extend({
        options: {
          iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png',
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
          iconSize: [25, 41],
          shadowSize: [41, 41],
          iconAnchor: [12, 41],
          shadowAnchor: [12, 41],
          popupAnchor: [0, -35]
        }
      });

    <script>
      var map = L.map("map").setView([51.505, -0.09], 13);

      L.tileLayer(
        "https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png",
        {
          attribution:
            '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        }
      ).addTo(map);

      var currentLocationIcon = L.icon({
        
          iconUrl: "assets/icons/current.svg",
          iconSize: [32, 32],
          iconAnchor: [16, 16],
          popupAnchor: [0, -16]

      });

      

      //L.marker([51.5, -0.09], {icon: currentLocationIcon}).addTo(map);
      
      const userLocation = L.marker([0.0, 0.0], { icon: currentLocationIcon }).addTo(
        map
      );
      let uLon, uLan;
      // Get the user's location using the Geolocation API
      navigator.geolocation.getCurrentPosition(
        (position) => {
          // Set the marker's position to the user's location
          userLocation.setLatLng([
            position.coords.latitude,
            position.coords.longitude,
          ]);

          // Set the map's view to the user's location
          map.setView(
            [position.coords.latitude, position.coords.longitude],
            13
          );
        },
        (error) => {
          console.error(error);
        }
      );
  // */
  //     const userLocation = L.marker([0.0, 0.0], { icon: currentIcon }).addTo(
  //       map
  //     );

      // // Get the user's location using the Geolocation API
      // navigator.geolocation.getCurrentPosition(
      //   (position) => {
      //     // Set the marker's position to the user's location
      //     userLocation.setLatLng([
      //       position.coords.latitude,
      //       position.coords.longitude,
      //     ]);

      //     // Set the map's view to the user's location
      //     map.setView(
      //       [position.coords.latitude, position.coords.longitude],
      //       13
      //     );
      //   },
      //   (error) => {
      //     console.error(error);
      //   }
      // // );
      // var lat, lng;
      // navigator.geolocation.getCurrentPosition(function (position) {
      //     lat = position.coords.latitude;
      //     lng = position.coords.longitude;
      //   console.log("Latitude: " + lat + " Longitude: " + lng);

      //   //L.marker([lat, lng]).addTo(map);
      // });
      

      // var control = L.Routing.control({
      //   waypoints: [
      //     L.latLng(lat, lng),
      //     L.latLng(52.23163710555889, 21.020493507385257),
      //   ],
      //   lineOptions: {
      //     styles: [{ color: "purple", opacity: 0.7, weight: 8 }],
      //   },
      // }).addTo(map);

    </script>
  </body>

</html>