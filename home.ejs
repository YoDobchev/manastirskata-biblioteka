<!DOCTYPE html>
<html>
  <head>
    <title>Mobile Page</title>   
   <!-- Leaflet CSS -->
   <link rel="stylesheet" type="text/css" href="../styles/home.css">
	 <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/>

	 <!-- Leaflet JS -->
	 <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
 </head>
  

  <body>
    <div id="container">
       <div id="map" style="width: 100%; height: 600px;"></div>
		    <div id="progress">
        <div id="progress-filled"></div>
      </div>
      <div id="buttons">
        <div class="button"></div>
        <div class="button"></div>
        <div class="button"></div>
        <div class="button"></div>
      </div>
    </div>

    <!---------- SCRIPT ------------>
	<script>
      var map = L.map('map', {
        zoomControls: false,
        attributionControl: false
      }).setView([51.505, -0.09], 13);


      var PurpleIcon = L.Icon.extend({
      options: {
          iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png',
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
          iconSize: [25, 41],
          shadowSize: [41, 41],
          iconAnchor: [12, 41],
          shadowAnchor: [12, 41],
          popupAnchor: [0, -35]
      }
    });

      var currentIcon = L.Icon.extend({
        options: {
          iconUrl: 'current.svg',
    
          iconSize:     [38, 95], // size of the icon
          //shadowSize:   [50, 64], // size of the shadow
          iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
          //shadowAnchor: [4, 62],  // the same for the shadow
          popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
        }
      });

// create a marker object with a custom purple icon
  var marker = L.marker([51.5, -0.09], {icon: new PurpleIcon()}).addTo(map);


	  L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
	  }).addTo(map);
    let checkpoint = "checkpoint"
    
    
    const userLocation = L.marker([0.0, 0.0], {icon: currentIcon}).addTo(map);

    // Get the user's location using the Geolocation API
    navigator.geolocation.getCurrentPosition(position => {
    // Set the marker's position to the user's location
    userLocation.setLatLng([position.coords.latitude, position.coords.longitude]);

    // Set the map's view to the user's location
    map.setView([position.coords.latitude, position.coords.longitude], 13);
    }, error => {
    console.error(error);
    });
    
    
    var marker = L.marker([51.5, -0.09], {icon: new PurpleIcon()}).addTo(map);


    // NAVIGATION
    
// define the start and end points
var start = L.latLng(51.5, -0.09);
var end = L.latLng(51.51, -0.1);

// create a routing control object and add it to the map
L.Routing.control({
    waypoints: [
        start,
        end
    ],
    routeWhileDragging: true,
    router: L.Routing.mapbox(process.env.ORS_API_KEY),
    // add a custom line style for the route
    lineOptions: {
        styles: [{color: '#4e87c0', opacity: 0.7, weight: 5}]
    }
}).addTo(map);
	</script>


  </body>
</html>
